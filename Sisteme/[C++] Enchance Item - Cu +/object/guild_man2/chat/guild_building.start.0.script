say_title ( gameforge . find_squareguard . _10_targetVid ) 
say ( gameforge . guild_manage . _20_say ) 
local u_name = input ( ) 
local u_vid = find_pc_by_name ( u_name ) 
if u_vid == 0 then 
say_title ( gameforge . guild_manage . _30_sayTitle ) 
say ( u_name ) 
return 
end 
local old_vid = pc . select ( u_vid , u_vid ) 
u_withdrawTime = pc . getqf ( "new_withdraw_time" ) 
u_withdrawTime = pc . getqf ( "new_withdraw_time" ) 
pc . select ( old_vid , old_vid ) 
withdrawDelay = game . get_event_flag ( "guild_withdraw_delay" ) 
disbandDelay = game . get_event_flag ( "guild_disband_delay" ) 
say_title ( gameforge . find_squareguard . _10_targetVid ) 
say ( gameforge . guild_manage . _40_say ) 
if u_withdrawTime > 0 then 
say ( string . format ( gameforge . guild_manage . _50_say , time_to_str ( u_withdrawTime ) .. gameforge . guild_manage . _55_say .. withdrawDelay ) ) 
end 
if u_disbandTime > 0 then 
say ( string . format ( gameforge . guild_manage . _60_say , time_to_str ( u_disbandTime ) .. gameforge . guild_manage . _65_say .. disbandDelay ) ) 
end 
local retryTime1 = u_withdrawTime + withdrawDelay * 86400 
local retryTime2 = u_withdrawTime + disbandDelay * 86400 
local retryTime = 0 
if retryTime1 > retryTime2 then 
retryTime = retryTime1 
else 
retryTime = retryTime2 
end 
local curTime = get_time ( ) 
if curTime < retryTime then 
say ( string . format ( gameforge . guild_manage . _70_say , time_to_str ( retryTime ) .. gameforge . guild_manage . _75_say .. ( ( retryTime - curTime ) / 3600 ) ) ) 
if is_test_server ( ) then 
local s = select ( gameforge . guild_manage . _80_select , gameforge . arena_manager . _200_tableInsert ) 
if s == 1 then 
local old_vid = pc . select ( u_vid , u_vid ) 
local curTime = get_time ( ) 
pc . setqf ( "new_withdraw_time" , curTime - withdrawDelay * 86400 ) 
pc . setqf ( "new_withdraw_time" , curTime - disbandDelay * 86400 ) 
pc . select ( old_vid , old_vid ) 
end 
end 
else 
say ( gameforge . guild_manage . _90_say ) 
end 
